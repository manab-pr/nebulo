name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.21'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      redis:
        image: redis:7.2-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest
    
    - name: Run staticcheck
      run: staticcheck ./...
    
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
    
    - name: Create .env file for testing
      run: |
        cat > .env << EOF
        PORT=8080
        APP_ENV=test
        APP_NAME=Nebulo
        MONGO_URI=mongodb://localhost:27017
        MONGO_DATABASE=nebulo_test
        REDIS_ADDR=localhost:6379
        REDIS_PASSWORD=
        REDIS_DB=1
        STORAGE_PATH=./test_storage
        MAX_FILE_SIZE=100MB
        DEVICE_SERVER_PORT=8081
        HEARTBEAT_INTERVAL=30s
        TRANSFER_TIMEOUT=300s
        JWT_SECRET=test-secret-key
        JWT_EXPIRES_IN=24h
        EOF
    
    - name: Run tests
      run: |
        mkdir -p test_storage
        go test -v -race -coverprofile=coverage.out ./...
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Build main server
      run: |
        CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o nebulo-server cmd/server/main.go
    
    - name: Build device server
      run: |
        CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o nebulo-device cmd/device-server/main.go
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: nebulo-binaries
        path: |
          nebulo-server
          nebulo-device

  docker:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ secrets.DOCKER_USERNAME }}/nebulo-server
          ${{ secrets.DOCKER_USERNAME }}/nebulo-device
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push main server image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/nebulo-server:${{ github.ref_name }},${{ secrets.DOCKER_USERNAME }}/nebulo-server:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
    
    - name: Build and push device server image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.device
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/nebulo-device:${{ github.ref_name }},${{ secrets.DOCKER_USERNAME }}/nebulo-device:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: './...'